% !TEX TS-program = pdflatex
% !TEX encoding = UTF-8 Unicode

% This is a simple template for a LaTeX document using the "article" class.
% See "book", "report", "letter" for other types of document.

\documentclass[11pt]{article} % use larger type; default would be 10pt

\usepackage[utf8]{inputenc} % set input encoding (not needed with XeLaTeX)

%%% Examples of Article customizations
% These packages are optional, depending whether you want the features they provide.
% See the LaTeX Companion or other references for full information.

%%% PAGE DIMENSIONS
\usepackage{geometry} % to change the page dimensions
\geometry{a4paper} % or letterpaper (US) or a5paper or....
% \geometry{margin=2in} % for example, change the margins to 2 inches all round
% \geometry{landscape} % set up the page for landscape
%   read geometry.pdf for detailed page layout information

\usepackage{graphicx} % support the \includegraphics command and options
% \usepackage[parfill]{parskip} % Activate to begin paragraphs with an empty line rather than an indent

%%% PACKAGES
\usepackage{booktabs} % for much better looking tables
\usepackage{array} % for better arrays (eg matrices) in maths
\usepackage{paralist} % very flexible & customisable lists (eg. enumerate/itemize, etc.)
\usepackage{verbatim} % adds environment for commenting out blocks of text & for better verbatim
\usepackage{subfig} % make it possible to include more than one captioned figure/table in a single float
\usepackage{mathtools}
\usepackage{amsthm}
\usepackage[english,italian]{babel}
% These packages are all incorporated in the memoir class to one degree or another...

%%% HEADERS & FOOTERS
\usepackage{fancyhdr} % This should be set AFTER setting up the page geometry
\pagestyle{fancy} % options: empty , plain , fancy
\renewcommand{\headrulewidth}{0pt} % customise the layout...
\lhead{}\chead{}\rhead{}
\lfoot{}\cfoot{\thepage}\rfoot{}


%%% SECTION TITLE APPEARANCE
\usepackage{sectsty}
\allsectionsfont{\sffamily\mdseries\upshape} % (See the fntguide.pdf for font help)
% (This matches ConTeXt defaults)

%%% ToC (table of contents) APPEARANCE
\usepackage[nottoc,notlof,notlot]{tocbibind} % Put the bibliography in the ToC
\usepackage[titles,subfigure]{tocloft} % Alter the style of the Table of Contents
\renewcommand{\cftsecfont}{\rmfamily\mdseries\upshape}
\renewcommand{\cftsecpagefont}{\rmfamily\mdseries\upshape} % No bold!


%%% END Article customizations


\title{UNO\\Progetto del Corso di Sistemi Distribuiti\\A.A. 2016/2017}
\author{Angelo De Lisa, Alessio Netti \\ \\ angelo.delisa@studio.unibo.it\\ mail alessio}
\date{} % Activate to display a given date or no date (if empty),
         % otherwise the current date is printed 

\begin{document}
\maketitle
\begin{otherlanguage}{english}
\begin{abstract}
UNO è un gioco di carte multiplayer in cui l'obiettivo, per ottenere la vittoria, è quello di scartare tutte le carte della propria mano, 
prima degli avversari. Il progetto realizzato consiste nell'implementazione di una versione distribuita del famoso gioco di carte UNO, nella quale vengono 
adottate le stesse regole della versione ufficiale del gioco.
Inoltre, per garantire la continuazione della partita in corso, è stato implementato un sistema di rilevamento e riparazione del crash dei giocatori. 
In tal modo, anche se uno o più giocatori abbandonano la partita in seguito ad un crash, i giocatori restanti sono in grado di proseguire e terminare 
la partita corrente. In questo documento, dunque, vengono descritte le scelte progettuali e le varie problematiche affrontate nella realizzazione dell'applicazione.
\end{abstract}
\end{otherlanguage}

\section{Introduzione}
UNO è un gioco di carte in cui il numero di giocatori può variare da 2 a 8. L'obiettivo del gioco è quello di scartare, per primo, tutte le carte nella 
propria mano per ottenere la vittoria. 
Il mazzo è composto da 108 carte e prevede carte normali, alle quali è associato un numero (da 0 a 9) e un colore (blu, giallo, rosso, verde), e carte speciali
che consentono di attivare effetti particolari. Tra le carte speciali, abbiamo:
\begin{itemize}
 \item la carta ``\emph{Blocco}'': fa saltare un turno al giocatore successivo nel senso di gioco;
 \item la carta ``\emph{Cambio giro}'': inverte il senso di gioco, cioè l'ordine dei turni dei giocatori;
 \item la carta ``\emph{Pesca 2}'': il giocatore successivo nel senso del gioco pesca due carte e salta il turno;
 \item la carta ``\emph{Pesca 4}'': il giocatore successivo nel senso del gioco pesca quattro carte e salta il turno. Inoltre, consente al giocatore che l'ha
 giocata, di cambiare il colore del gioco. 
 \item la carta ``\emph{Cambia colore}'': permette al giocatore di scegliere uno tra i quattro colori disponibili come colore di gioco.
\end{itemize}
In particolare, alle carte \emph{Blocco}, \emph{Cambio giro} e \emph{Pesca 2}, è associato un colore mentre le altre due carte speciali (\emph{Pesca 4} e 
\emph{Cambia colore}) non hanno alcun colore associato.\\
Per iniziare il gioco, il mazziere distribuisce sette carte ad ogni giocatore e il mazzo restante viene
messo al centro per consentire ai giocatori di pescare quando, durante il proprio turno, nella propria mano non si hanno carte da poter scartare. 
Inoltre, da questo mazzo, viene voltata una carta che andrà a formare il cosiddetto ``\emph{mazzo degli scarti}''. 
Un giocatore può scartare una carta dalla propria mano solamente quando questa è compatibile con l'ultima carta del mazzo degli scarti. 
Compatibile significa che la carta nella propria mano è dello stesso colore o dello stesso tipo di quella in cima
al mazzo degli scarti, oppure è una carta ``\emph{Pesca 4}'' o ``\emph{Cambia colore}'', che può essere sempre giocata.\\
L'obiettivo di questo progetto è la realizzazione di una versione distribuita del gioco di carte UNO che sia utilizzabile, tramite un'interfaccia grafica 
piacevole, su più macchine differenti interconnesse tra loro. In particolare, è stata posta l'attenzione sulla tolleranza ai crash delle macchine coinvolte.
Infatti, il gioco continua la sua normale esecuzione nel caso in cui un giocatore abbandoni prematuramente la partita oppure la sua macchina vada in crash.\\
Nel resto del documento, verrà data una panoramica del gioco nella Sezione 2; nella Sezione 3, verranno presentati gli aspetti implementativi;
il documento si conclude con possibili miglioramenti e considerazioni finali.

\section{Panoramica del Gioco}
L'architettura dell'applicazione realizzata è di tipo distribuito. L'unica forma di centralizzazione utilizzata è quella che consente la registrazione dei 
partecipanti al gioco. In questo scenario, uno dei giocatori sceglie di essere l'entità centrale semplicemente spuntando la casella presente nel pannello 
di registrazione. Successivamente, una volta indicato il proprio username e il numero di partecipanti alla partita, viene inizializzato lo stato del gioco e
avviata l'interfaccia di gioco. In tale schermata è, inoltre, presente l'indirizzo IP al quale gli altri peer devono connettersi per poter partecipare alla 
partita appena avviata. Quindi, i restanti giocatori, dovranno inserire nell'apposito campo ``IP Host'', l'indirizzo IP dell'host. Ogni volta che un peer si
connette alla partita, l'interfaccia di gioco viene aggiornata mostrando i giocatori attualmente connessi. Quando tutti i giocatori hanno effettuato la 
registrazione alla partita, la fase di registrazione termina e nessun peer fungerà da entità centrale. Da quel momento in poi, le comunicazioni avverranno 
solamente in maniera peer-to-peer.\\
Finita la fase di registrazione, quindi, comincia la fase di gioco. Il giocatore che fungeva da host centrale, è il primo a giocare. Ogni giocatore deve 
attendere il proprio turno per poter giocare la sua mossa. Quando un giocatore effettua una mossa, questa viene notificata a tutti gli altri giocatori e 
sarà visibile nell'interfaccia di gioco. Tramite l'interfaccia, è possibile osservare lo stato di gioco, cioè sapere chi ha il turno, quante le carte nella 
mano ha ogni giocatore e quante carte rimangono nel ``mazzo di pesca''. Durante il gioco, alcuni giocatori potrebbero abbandonare la partita oppure
la loro macchina potrebbe andare in crash. In tal caso, il giocatore viene rimosso dalla partita corrente senza avere la possibilità di ritornare in gara, 
mentre i restanti giocatori possono continuare normalmente la partita. Per decretare un vincitore, invece, ci sono due possibilità: 
o il giocatore ha terminato tutte le carte della propria mano, oppure è rimasto l'unico giocatore attivo nel tavolo di gioco. 
In tal caso, una label notificherà al giocatore la sua vittoria.

\section{Implementazione}
\subsection{}
\section{Conclusioni}

\end{document}


